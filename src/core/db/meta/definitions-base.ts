/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/column": {
    get: {
      parameters: {
        query: {
          table_description?: parameters["rowFilter.column.table_description"];
          description?: parameters["rowFilter.column.description"];
          enums?: parameters["rowFilter.column.enums"];
          table_catalog?: parameters["rowFilter.column.table_catalog"];
          table_schema?: parameters["rowFilter.column.table_schema"];
          table_name?: parameters["rowFilter.column.table_name"];
          column_name?: parameters["rowFilter.column.column_name"];
          ordinal_position?: parameters["rowFilter.column.ordinal_position"];
          column_default?: parameters["rowFilter.column.column_default"];
          is_nullable?: parameters["rowFilter.column.is_nullable"];
          data_type?: parameters["rowFilter.column.data_type"];
          character_maximum_length?: parameters["rowFilter.column.character_maximum_length"];
          character_octet_length?: parameters["rowFilter.column.character_octet_length"];
          numeric_precision?: parameters["rowFilter.column.numeric_precision"];
          numeric_precision_radix?: parameters["rowFilter.column.numeric_precision_radix"];
          numeric_scale?: parameters["rowFilter.column.numeric_scale"];
          datetime_precision?: parameters["rowFilter.column.datetime_precision"];
          interval_type?: parameters["rowFilter.column.interval_type"];
          interval_precision?: parameters["rowFilter.column.interval_precision"];
          character_set_catalog?: parameters["rowFilter.column.character_set_catalog"];
          character_set_schema?: parameters["rowFilter.column.character_set_schema"];
          character_set_name?: parameters["rowFilter.column.character_set_name"];
          collation_catalog?: parameters["rowFilter.column.collation_catalog"];
          collation_schema?: parameters["rowFilter.column.collation_schema"];
          collation_name?: parameters["rowFilter.column.collation_name"];
          domain_catalog?: parameters["rowFilter.column.domain_catalog"];
          domain_schema?: parameters["rowFilter.column.domain_schema"];
          domain_name?: parameters["rowFilter.column.domain_name"];
          udt_catalog?: parameters["rowFilter.column.udt_catalog"];
          udt_schema?: parameters["rowFilter.column.udt_schema"];
          udt_name?: parameters["rowFilter.column.udt_name"];
          scope_catalog?: parameters["rowFilter.column.scope_catalog"];
          scope_schema?: parameters["rowFilter.column.scope_schema"];
          scope_name?: parameters["rowFilter.column.scope_name"];
          maximum_cardinality?: parameters["rowFilter.column.maximum_cardinality"];
          dtd_identifier?: parameters["rowFilter.column.dtd_identifier"];
          is_self_referencing?: parameters["rowFilter.column.is_self_referencing"];
          is_identity?: parameters["rowFilter.column.is_identity"];
          identity_generation?: parameters["rowFilter.column.identity_generation"];
          identity_start?: parameters["rowFilter.column.identity_start"];
          identity_increment?: parameters["rowFilter.column.identity_increment"];
          identity_maximum?: parameters["rowFilter.column.identity_maximum"];
          identity_minimum?: parameters["rowFilter.column.identity_minimum"];
          identity_cycle?: parameters["rowFilter.column.identity_cycle"];
          is_generated?: parameters["rowFilter.column.is_generated"];
          generation_expression?: parameters["rowFilter.column.generation_expression"];
          is_updatable?: parameters["rowFilter.column.is_updatable"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["column"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/ddl_command": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.ddl_command.id"];
          command_tag?: parameters["rowFilter.ddl_command.command_tag"];
          schema_name?: parameters["rowFilter.ddl_command.schema_name"];
          object_type?: parameters["rowFilter.ddl_command.object_type"];
          object_identity?: parameters["rowFilter.ddl_command.object_identity"];
          at?: parameters["rowFilter.ddl_command.at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["ddl_command"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** ddl_command */
          ddl_command?: definitions["ddl_command"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.ddl_command.id"];
          command_tag?: parameters["rowFilter.ddl_command.command_tag"];
          schema_name?: parameters["rowFilter.ddl_command.schema_name"];
          object_type?: parameters["rowFilter.ddl_command.object_type"];
          object_identity?: parameters["rowFilter.ddl_command.object_identity"];
          at?: parameters["rowFilter.ddl_command.at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.ddl_command.id"];
          command_tag?: parameters["rowFilter.ddl_command.command_tag"];
          schema_name?: parameters["rowFilter.ddl_command.schema_name"];
          object_type?: parameters["rowFilter.ddl_command.object_type"];
          object_identity?: parameters["rowFilter.ddl_command.object_identity"];
          at?: parameters["rowFilter.ddl_command.at"];
        };
        body: {
          /** ddl_command */
          ddl_command?: definitions["ddl_command"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/foreign_key": {
    get: {
      parameters: {
        query: {
          table_schema?: parameters["rowFilter.foreign_key.table_schema"];
          constraint_name?: parameters["rowFilter.foreign_key.constraint_name"];
          table_name?: parameters["rowFilter.foreign_key.table_name"];
          column_name?: parameters["rowFilter.foreign_key.column_name"];
          foreign_table_schema?: parameters["rowFilter.foreign_key.foreign_table_schema"];
          foreign_table_name?: parameters["rowFilter.foreign_key.foreign_table_name"];
          foreign_column_name?: parameters["rowFilter.foreign_key.foreign_column_name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["foreign_key"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/primary_key": {
    get: {
      parameters: {
        query: {
          table_schema?: parameters["rowFilter.primary_key.table_schema"];
          table_name?: parameters["rowFilter.primary_key.table_name"];
          constraint_name?: parameters["rowFilter.primary_key.constraint_name"];
          ordinal_position?: parameters["rowFilter.primary_key.ordinal_position"];
          column_name?: parameters["rowFilter.primary_key.column_name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["primary_key"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/view": {
    get: {
      parameters: {
        query: {
          schema_name?: parameters["rowFilter.view.schema_name"];
          view_name?: parameters["rowFilter.view.view_name"];
          referenced_table_schema?: parameters["rowFilter.view.referenced_table_schema"];
          referenced_table_name?: parameters["rowFilter.view.referenced_table_name"];
          view_definition?: parameters["rowFilter.view.view_definition"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["view"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/rpc/refresh_meta_trigger": {
    post: {
      parameters: {
        body: {
          args: { [key: string]: any };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/select_foreign": {
    post: {
      parameters: {
        body: {
          args: {
            field: string;
            constraint: string;
            filter: string;
            table: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/refresh_meta": {
    post: {
      parameters: {
        body: {
          args: { [key: string]: any };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/select": {
    post: {
      parameters: {
        body: {
          args: {
            field: string;
            table: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface definitions {
  column: {
    table_description?: string;
    description?: string;
    enums?: string;
    table_catalog?: string;
    table_schema?: string;
    table_name?: string;
    column_name?: string;
    ordinal_position?: number;
    column_default?: string;
    is_nullable?: string;
    data_type?: string;
    character_maximum_length?: number;
    character_octet_length?: number;
    numeric_precision?: number;
    numeric_precision_radix?: number;
    numeric_scale?: number;
    datetime_precision?: number;
    interval_type?: string;
    interval_precision?: number;
    character_set_catalog?: string;
    character_set_schema?: string;
    character_set_name?: string;
    collation_catalog?: string;
    collation_schema?: string;
    collation_name?: string;
    domain_catalog?: string;
    domain_schema?: string;
    domain_name?: string;
    udt_catalog?: string;
    udt_schema?: string;
    udt_name?: string;
    scope_catalog?: string;
    scope_schema?: string;
    scope_name?: string;
    maximum_cardinality?: number;
    dtd_identifier?: string;
    is_self_referencing?: string;
    is_identity?: string;
    identity_generation?: string;
    identity_start?: string;
    identity_increment?: string;
    identity_maximum?: string;
    identity_minimum?: string;
    identity_cycle?: string;
    is_generated?: string;
    generation_expression?: string;
    is_updatable?: string;
  };
  ddl_command: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    command_tag?: string;
    schema_name?: string;
    object_type?: string;
    object_identity?: string;
    at?: string;
  };
  foreign_key: {
    table_schema?: string;
    constraint_name?: string;
    table_name?: string;
    column_name?: string;
    foreign_table_schema?: string;
    foreign_table_name?: string;
    foreign_column_name?: string;
  };
  primary_key: {
    table_schema?: string;
    table_name?: string;
    constraint_name?: string;
    ordinal_position?: number;
    column_name?: string;
  };
  view: {
    schema_name?: string;
    view_name?: string;
    referenced_table_schema?: string;
    referenced_table_name?: string;
    view_definition?: string;
  };
}

export interface parameters {
  /** Preference */
  preferParams: "params=single-object";
  /** Preference */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /** Preference */
  preferCount: "count=none";
  /** Filtering Columns */
  select: string;
  /** On Conflict */
  on_conflict: string;
  /** Ordering */
  order: string;
  /** Limiting and Pagination */
  range: string;
  /** Limiting and Pagination */
  rangeUnit: string;
  /** Limiting and Pagination */
  offset: string;
  /** Limiting and Pagination */
  limit: string;
  /** column */
  "body.column": definitions["column"];
  "rowFilter.column.table_description": string;
  "rowFilter.column.description": string;
  "rowFilter.column.enums": string;
  "rowFilter.column.table_catalog": string;
  "rowFilter.column.table_schema": string;
  "rowFilter.column.table_name": string;
  "rowFilter.column.column_name": string;
  "rowFilter.column.ordinal_position": string;
  "rowFilter.column.column_default": string;
  "rowFilter.column.is_nullable": string;
  "rowFilter.column.data_type": string;
  "rowFilter.column.character_maximum_length": string;
  "rowFilter.column.character_octet_length": string;
  "rowFilter.column.numeric_precision": string;
  "rowFilter.column.numeric_precision_radix": string;
  "rowFilter.column.numeric_scale": string;
  "rowFilter.column.datetime_precision": string;
  "rowFilter.column.interval_type": string;
  "rowFilter.column.interval_precision": string;
  "rowFilter.column.character_set_catalog": string;
  "rowFilter.column.character_set_schema": string;
  "rowFilter.column.character_set_name": string;
  "rowFilter.column.collation_catalog": string;
  "rowFilter.column.collation_schema": string;
  "rowFilter.column.collation_name": string;
  "rowFilter.column.domain_catalog": string;
  "rowFilter.column.domain_schema": string;
  "rowFilter.column.domain_name": string;
  "rowFilter.column.udt_catalog": string;
  "rowFilter.column.udt_schema": string;
  "rowFilter.column.udt_name": string;
  "rowFilter.column.scope_catalog": string;
  "rowFilter.column.scope_schema": string;
  "rowFilter.column.scope_name": string;
  "rowFilter.column.maximum_cardinality": string;
  "rowFilter.column.dtd_identifier": string;
  "rowFilter.column.is_self_referencing": string;
  "rowFilter.column.is_identity": string;
  "rowFilter.column.identity_generation": string;
  "rowFilter.column.identity_start": string;
  "rowFilter.column.identity_increment": string;
  "rowFilter.column.identity_maximum": string;
  "rowFilter.column.identity_minimum": string;
  "rowFilter.column.identity_cycle": string;
  "rowFilter.column.is_generated": string;
  "rowFilter.column.generation_expression": string;
  "rowFilter.column.is_updatable": string;
  /** ddl_command */
  "body.ddl_command": definitions["ddl_command"];
  "rowFilter.ddl_command.id": string;
  "rowFilter.ddl_command.command_tag": string;
  "rowFilter.ddl_command.schema_name": string;
  "rowFilter.ddl_command.object_type": string;
  "rowFilter.ddl_command.object_identity": string;
  "rowFilter.ddl_command.at": string;
  /** foreign_key */
  "body.foreign_key": definitions["foreign_key"];
  "rowFilter.foreign_key.table_schema": string;
  "rowFilter.foreign_key.constraint_name": string;
  "rowFilter.foreign_key.table_name": string;
  "rowFilter.foreign_key.column_name": string;
  "rowFilter.foreign_key.foreign_table_schema": string;
  "rowFilter.foreign_key.foreign_table_name": string;
  "rowFilter.foreign_key.foreign_column_name": string;
  /** primary_key */
  "body.primary_key": definitions["primary_key"];
  "rowFilter.primary_key.table_schema": string;
  "rowFilter.primary_key.table_name": string;
  "rowFilter.primary_key.constraint_name": string;
  "rowFilter.primary_key.ordinal_position": string;
  "rowFilter.primary_key.column_name": string;
  /** view */
  "body.view": definitions["view"];
  "rowFilter.view.schema_name": string;
  "rowFilter.view.view_name": string;
  "rowFilter.view.referenced_table_schema": string;
  "rowFilter.view.referenced_table_name": string;
  "rowFilter.view.view_definition": string;
}

export interface operations {}
